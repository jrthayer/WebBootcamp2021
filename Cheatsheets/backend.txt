Backend: Server side development.

    Command Line/Terminal:
        +Terminal: A text-based interface to your computer.
        +Shell: Software running the text-based interface. (unix is the os kinda)
            +Bash: popular shell used on mac
            +zShell(zsh): newer shell on mac
            +windows default shell runs MS Dos instead of Unix.
            +gitBash: bash shell for windows.
                +src: https://git-scm.com/downloads
                +includes: Bash and Git support.
        +Bash Commands:
            +ls: show files and directories in current dir.
            +pwd: displays current directory
            +cd: changes directory.
            +mkdir: makes directory(also known as a folder).
            +touch: creates files.
            +rm: removes files.
            +rmdir: removes directory.
            +<command name> --help:gives information on command(like flags). 
            +<command name> -flag: flags are arguments for shell commands.
        +Relative vs Absolute Paths:
            +Relative: path relative to current directory.
            +Absolute: / before path since / is the root directory.
                +path is can be done anywhere since it is a strict path starting at root dir.
        +Notes:
                + ~ === home directory.
                + / === root directory.
    
    NodeJS: a JavaScript runtime. An implementation of JS that can be run outside the browser.
        +What people use it for:
            +Web Servers
            +Command Line Tools
            +Native Apps(VSCode is a Node App)
                +Using Electron
            +Video Games
        +Installation: go to their website...
        +Node REPL: sandbox that is running/interpreting js.
            +doesn't have any of the browser stuff like the window DOM object.
            +accessed by running 'node' in the bash.
            +exit with .exit
        +Running a js file: $node filename.js
        +getting arguments:
            +syntax: $node file.js arg1 arg2 arg3
                    //inside file.js below
                    console.log(process.argv.slice(2));



        
